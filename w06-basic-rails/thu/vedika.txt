➜  pairing  git clone git@github.com:redline6561/shortr.git
Cloning into 'shortr'...
remote: Counting objects: 64, done.
remote: Compressing objects: 100% (51/51), done.
remote: Total 64 (delta 2), reused 64 (delta 2), pack-reused 0
Receiving objects: 100% (64/64), 16.44 KiB | 0 bytes/s, done.
Resolving deltas: 100% (2/2), done.
Checking connectivity... done.
➜  pairing  ls
shortr
➜  pairing  cd shortr
➜  shortr git:(master) 





















➜  shortr git:(master) who
Vedika
➜  shortr git:(master) git remote -v
origin	git@github.com:redline6561/shortr.git (fetch)
origin	git@github.com:redline6561/shortr.git (push)
➜  shortr git:(master) clear












                                                         

















➜  shortr git:(master) who
Vedika
➜  shortr git:(master) git remote -v
origin	git@github.com:redline6561/shortr.git (fetch)
origin	git@github.com:redline6561/shortr.git (push)
➜  shortr git:(master) git remote add upstream https://github.com/TIY-ATL-ROR-2015-May/shortr.git
➜  shortr git:(master) git remote -v
origin	git@github.com:redline6561/shortr.git (fetch)
origin	git@github.com:redline6561/shortr.git (push)
upstream	https://github.com/TIY-ATL-ROR-2015-May/shortr.git (fetch)
upstream	https://github.com/TIY-ATL-ROR-2015-May/shortr.git (push)
➜  shortr git:(master) git remote rm upstream
➜  shortr git:(master) git remote add brit https://github.com/TIY-ATL-ROR-2015-May/shortr.git
➜  shortr git:(master) 


















➜  shortr git:(master) clear

















                                                         

















➜  shortr git:(master) git remote -v         
brit	https://github.com/TIY-ATL-ROR-2015-May/shortr.git (fetch)
brit	https://github.com/TIY-ATL-ROR-2015-May/shortr.git (push)
origin	git@github.com:redline6561/shortr.git (fetch)
origin	git@github.com:redline6561/shortr.git (push)
➜  shortr git:(master) who
Vedika
➜  shortr git:(master) git checkout -b links
Switched to a new branch 'links'
➜  shortr git:(links) rails g model Link title:string destination:string























➜  shortr git:(links) rails g model Link title:string destination:string
      invoke  active_record
      create    db/migrate/20150611140240_create_links.rb
      create    app/models/link.rb
      invoke    test_unit
      create      test/models/link_test.rb
      create      test/fixtures/links.yml
➜  shortr git:(links) ✗ rake db:migrate
e== 20150611140240 CreateLinks: migrating ======================================
-- create_table(:links)
   -> 0.0014s
== 20150611140240 CreateLinks: migrated (0.0015s) =============================

➜  shortr git:(links) ✗ git status
On branch links
Untracked files:
  (use "git add <file>..." to include in what will be committed)

	app/models/link.rb
	db/migrate/
	db/schema.rb
	test/fixtures/links.yml
	test/models/link_test.rb

nothing added to commit but untracked files present (use "git add" to track)
➜  shortr git:(links) ✗ git add .   
➜  shortr git:(links) ✗ git status
On branch links
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

	new file:   app/models/link.rb
	new file:   db/migrate/20150611140240_create_links.rb
	new file:   db/schema.rb
	new file:   test/fixtures/links.yml
	new file:   test/models/link_test.rb

➜  shortr git:(links) ✗ git commit -m 'Add link migration and model, update the schema.'
[links fc836ea] Add link migration and model, update the schema.
 5 files changed, 51 insertions(+)
 create mode 100644 app/models/link.rb
 create mode 100644 db/migrate/20150611140240_create_links.rb
 create mode 100644 db/schema.rb
 create mode 100644 test/fixtures/links.yml
 create mode 100644 test/models/link_test.rb
➜  shortr git:(links) git log
➜  shortr git:(links) clear

                                                         

















➜  shortr git:(links) git push
fatal: The current branch links has no upstream branch.
To push the current branch and set the remote as upstream, use

    git push --set-upstream origin links

➜  shortr git:(links) git push --set-upstream origin links
Counting objects: 14, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (13/13), done.
Writing objects: 100% (14/14), 1.82 KiB | 0 bytes/s, done.
Total 14 (delta 3), reused 0 (delta 0)
To git@github.com:redline6561/shortr.git
 * [new branch]      links -> links
Branch links set up to track remote branch links from origin.
➜  shortr git:(links) git push -u 


















➜  shortr git:(links) git push -u origin links
Branch links set up to track remote branch links from origin.
Everything up-to-date
➜  shortr git:(links) who
Vedika
➜  shortr git:(links) 





























➜  shortr git:(links) clear

















                                                         

















➜  shortr git:(links) rails g migration AddShortenedToLinks
      invoke  active_record
      create    db/migrate/20150611140729_add_shortened_to_links.rb
➜  shortr git:(links) ✗ rake db:migrate
== 20150611140729 AddShortenedToLinks: migrating ==============================
-- add_column(:links, :shortened, :string)
   -> 0.0020s
== 20150611140729 AddShortenedToLinks: migrated (0.0022s) =====================

➜  shortr git:(links) ✗ 






















➜  shortr git:(links) ✗ rails c
Loading development environment (Rails 4.2.1)
irb(main):001:0> l = Link.new
=> #<Link id: nil, title: nil, destination: nil, created_at: nil, updated_at: nil, shortened: nil>
irb(main):002:0> l.title = "Ars Technica"
=> "Ars Technica"
irb(main):003:0> l.destination = "https://arstechnica.com/"
=> "https://arstechnica.com/"
irb(main):004:0> l.save
   (0.2ms)  begin transaction
  SQL (0.5ms)  INSERT INTO "links" ("title", "destination", "created_at", "updated_at") VALUES (?, ?, ?, ?)  [["title", "Ars Technica"], ["destination", "https://arstechnica.com/"], ["created_at", "2015-06-11 14:09:14.510695"], ["updated_at", "2015-06-11 14:09:14.510695"]]
   (1.4ms)  commit transaction
=> true
irb(main):005:0> 
irb(main):005:0> l = Link.create(title: "Cookies")
   (0.1ms)  begin transaction
  SQL (0.5ms)  INSERT INTO "links" ("title", "created_at", "updated_at") VALUES (?, ?, ?)  [["title", "Cookies"], ["created_at", "2015-06-11 14:09:33.571222"], ["updated_at", "2015-06-11 14:09:33.571222"]]
   (1.5ms)  commit transaction
=> #<Link id: 2, title: "Cookies", destination: nil, created_at: "2015-06-11 14:09:33", updated_at: "2015-06-11 14:09:33", shortened: nil>
irb(main):006:0> ^D
➜  shortr git:(links) ✗ rails c
Loading development environment (Rails 4.2.1)
irb(main):001:0> 




irb(main):001:0> Link.create(title: 'joke is on you')
   (0.1ms)  begin transaction
   (0.1ms)  rollback transaction
=> #<Link id: nil, title: "joke is on you", destination: nil, created_at: nil, updated_at: nil, shortened: nil>
irb(main):002:0> l = Link.create(title: 'joke is on you') 
   (0.1ms)  begin transaction
   (0.1ms)  rollback transaction
=> #<Link id: nil, title: "joke is on you", destination: nil, created_at: nil, updated_at: nil, shortened: nil>
irb(main):003:0> l.errors
=> #<ActiveModel::Errors:0x007f84df96c178 @base=#<Link id: nil, title: "joke is on you", destination: nil, created_at: nil, updated_at: nil, shortened: nil>, @messages={:destination=>["can't be blank"]}>
irb(main):004:0> l.valid?
=> false
irb(main):005:0> 
irb(main):005:0> l.valid?
=> false
irb(main):006:0> l
=> #<Link id: nil, title: "joke is on you", destination: nil, created_at: nil, updated_at: nil, shortened: nil>
irb(main):007:0> l = Link.last
  Link Load (0.3ms)  SELECT  "links".* FROM "links"  ORDER BY "links"."id" DESC LIMIT 1
=> #<Link id: 2, title: "Cookies", destination: nil, created_at: "2015-06-11 14:09:33", updated_at: "2015-06-11 14:09:33", shortened: nil>
irb(main):008:0> 






irb(main):008:0> l.destination
=> nil
irb(main):009:0> l = Link.first
  Link Load (0.5ms)  SELECT  "links".* FROM "links"  ORDER BY "links"."id" ASC LIMIT 1
=> #<Link id: 1, title: "Ars Technica", destination: "https://arstechnica.com/", created_at: "2015-06-11 14:09:14", updated_at: "2015-06-11 14:09:14", shortened: nil>
irb(main):010:0> l.destination = nil
=> nil
irb(main):011:0> 







irb(main):011:0> l
=> #<Link id: 1, title: "Ars Technica", destination: nil, created_at: "2015-06-11 14:09:14", updated_at: "2015-06-11 14:09:14", shortened: nil>
irb(main):012:0> l.destination = nil
=> nil
irb(main):013:0> l.save
   (0.1ms)  begin transaction
   (0.1ms)  rollback transaction
=> false
irb(main):014:0> l = Link.last
  Link Load (0.3ms)  SELECT  "links".* FROM "links"  ORDER BY "links"."id" DESC LIMIT 1
=> #<Link id: 2, title: "Cookies", destination: nil, created_at: "2015-06-11 14:09:33", updated_at: "2015-06-11 14:09:33", shortened: nil>
irb(main):015:0> 

irb(main):015:0> l = Link.last
  Link Load (0.3ms)  SELECT  "links".* FROM "links"  ORDER BY "links"."id" DESC LIMIT 1
=> #<Link id: 2, title: "Cookies", destination: nil, created_at: "2015-06-11 14:09:33", updated_at: "2015-06-11 14:09:33", shortened: nil>
irb(main):016:0> l.update(title: "Nowhere")
   (0.1ms)  begin transaction
   (0.2ms)  rollback transaction
=> false
irb(main):017:0> l.update(title: "Nowhere", destination: "")
   (0.1ms)  begin transaction
   (0.1ms)  rollback transaction
=> false
irb(main):018:0> l.update(title: "Nowhere", destination: "lkjasdflkjasdf")
   (12.9ms)  begin transaction
  SQL (0.6ms)  UPDATE "links" SET "title" = ?, "destination" = ?, "updated_at" = ? WHERE "links"."id" = ?  [["title", "Nowhere"], ["destination", "lkjasdflkjasdf"], ["updated_at", "2015-06-11 14:14:20.727606"], ["id", 2]]
   (0.8ms)  commit transaction
=> true
irb(main):019:0> ^D
➜  shortr git:(links) ✗ 


















➜  shortr git:(links) ✗ git status
On branch links
Your branch is up-to-date with 'origin/links'.
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	modified:   app/models/link.rb
	modified:   db/schema.rb

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	db/migrate/20150611140729_add_shortened_to_links.rb

no changes added to commit (use "git add" and/or "git commit -a")
➜  shortr git:(links) ✗ git diff
➜  shortr git:(links) ✗ git add .
➜  shortr git:(links) ✗ less db/migrate/20150611140729_add_shortened_to_links.rb
➜  shortr git:(links) ✗ git commit -m 'Add validation for Links and add shortened column.'
[links 70785a6] Add validation for Links and add shortened column.
 3 files changed, 9 insertions(+), 1 deletion(-)
 create mode 100644 db/migrate/20150611140729_add_shortened_to_links.rb
➜  shortr git:(links) git branch
* links
  master
➜  shortr git:(links) 


















➜  shortr git:(links) git push
Counting objects: 9, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (9/9), done.
Writing objects: 100% (9/9), 914 bytes | 0 bytes/s, done.
Total 9 (delta 4), reused 0 (delta 0)
To git@github.com:redline6561/shortr.git
   fc836ea..70785a6  links -> links
➜  shortr git:(links) who
Vedika
➜  shortr git:(links) git log
➜  shortr git:(links) 
























➜  shortr git:(links) pry
[1] pry(main)> require 'digest/sha1'
=> false
[2] pry(main)> Digest::SHA1.hexdigest("google.com")
=> "baea954b95731c68ae6e45bd1e252eb4560cdc45"
[3] pry(main)> Digest::SHA1.hexdigest("googie.com")
=> "df9d326e1dffef6a228948fe7a2038f88f7eced3"
[4] pry(main)> ^D
➜  shortr git:(links) bundle
Undefined local variable or method `ource' for Gemfile
        from /Users/brit/pairing/shortr/Gemfile:1
➜  shortr git:(links) ✗ bundle
Fetching gem metadata from https://rubygems.org/............
Fetching additional metadata from https://rubygems.org/..
Resolving dependencies...
Using rake 10.4.2
Using i18n 0.7.0
Using json 1.8.3
Using minitest 5.7.0
Using thread_safe 0.3.5
Using tzinfo 1.2.2
Using activesupport 4.2.1
Using builder 3.2.2
Using erubis 2.7.0
Using mini_portile 0.6.2
Using nokogiri 1.6.6.2
Using rails-deprecated_sanitizer 1.0.3
Using rails-dom-testing 1.0.6
Using loofah 2.0.2
Using rails-html-sanitizer 1.0.2
Using actionview 4.2.1
Using rack 1.6.1
Using rack-test 0.6.3
Using actionpack 4.2.1
Using globalid 0.3.5
Using activejob 4.2.1
Using mime-types 2.6.1
Using mail 2.6.3
Using actionmailer 4.2.1
Using activemodel 4.2.1
Using arel 6.0.0
Using activerecord 4.2.1
Using debug_inspector 0.0.2
Using binding_of_caller 0.7.2
Using bundler 1.7.9
Using columnize 0.9.0
Using byebug 5.0.0
Using coffee-script-source 1.9.1.1
Using execjs 2.5.2
Using coffee-script 2.4.1
Using thor 0.19.1
Using railties 4.2.1
Using coffee-rails 4.1.0
Installing hashids 1.0.2
Using multi_json 1.11.1
Using jbuilder 2.2.16
Using jquery-rails 4.0.3
Using sprockets 3.2.0
Using sprockets-rails 2.3.1
Using rails 4.2.1
Using rdoc 4.2.0
Using sass 3.4.14
Using tilt 1.4.1
Using sass-rails 5.0.3
Using sdoc 0.4.1
Using spring 1.3.6
Using sqlite3 1.3.10
Using turbolinks 2.5.3
Using uglifier 2.7.1
Using web-console 2.1.2
Your bundle is complete!
Use `bundle show [gemname]` to see where a bundled gem is installed.
➜  shortr git:(links) ✗ 


















➜  shortr git:(links) ✗ pry
[1] pry(main)> require 'hashids'
=> true
[2] pry(main)> Hashids.new('google.com')
=> #<Hashids:0x007fc1740e2620
 @alphabet=
  "3pdPW2K5XQBD9LovqnAl4YxGEr8bya7jRJ0Zm1OekVgz",
 @guards="w6NM",
 @min_hash_length=0,
 @salt="google.com",
 @seps="fiItuTFUCcsHhS">
[3] pry(main)> ^D
➜  shortr git:(links) ✗ pry
[1] pry(main)> require 'hashids'
=> true
[2] pry(main)> hasher = Hashids.new
=> #<Hashids:0x007fb41e8ee778
 @alphabet=
  "gjklmnopqrvwxyzABDEGJKLMNOPQRVWXYZ1234567890",
 @guards="abde",
 @min_hash_length=0,
 @salt="",
 @seps="cfhistuCFHISTU">
[3] pry(main)> hasher.encode('google.com')
ArgumentError: invalid value for Integer(): "google.com"
from /Users/brit/.rbenv/versions/2.1.5/lib/ruby/gems/2.1.0/gems/hashids-1.0.2/lib/hashids.rb:29:in `Integer'
[4] pry(main)> 
[4] pry(main)> 'google.com'.bytes
=> [103, 111, 111, 103, 108, 101, 46, 99, 111, 109]
[5] pry(main)> hasher.encode('google.com'.bytes)
=> "wjgtLNuqkUp1tYjfAVi37sWxtMlTLN"
[6] pry(main)> hasher.encode('google.com'.bytes)
=> "wjgtLNuqkUp1tYjfAVi37sWxtMlTLN"
[7] pry(main)> ^D
➜  shortr git:(links) ✗ clear










                                                         

















➜  shortr git:(links) ✗ pry  
[1] pry(main)> "google.com".hash
=> 2881371208325235271
[2] pry(main)> require 'hashids'
=> true
[3] pry(main)> hasher = Hashid.new
NameError: uninitialized constant Hashid
from (pry):3:in `__pry__'
[4] pry(main)> hasher = Hashids.new
=> #<Hashids:0x007fbbd9389f18
 @alphabet=
  "gjklmnopqrvwxyzABDEGJKLMNOPQRVWXYZ1234567890",
 @guards="abde",
 @min_hash_length=0,
 @salt="",
 @seps="cfhistuCFHISTU">
[5] pry(main)> 

[5] pry(main)> hasher.encode("google.com".hash)
=> "Q1XVRy5znQzMq"
[6] pry(main)> "google.com".hash
=> 2881371208325235271
[7] pry(main)> "http://google.com".hash
=> -371498474453256331
[8] pry(main)> hasher.encode("http://google.com".hash)
=> ""
[9] pry(main)> hasher.encode("http://google.com".hash)
=> ""
[10] pry(main)> hasher.encode("http://google.com".hash)
=> ""
[11] pry(main)> hasher.encode("http://google.com".hash)
=> ""
[12] pry(main)> ^D
➜  shortr git:(links) ✗ pry
[1] pry(main)> require 'hashids'
=> true
[2] pry(main)> hasher = Hashids.new
=> #<Hashids:0x007ff89c8b5b18
 @alphabet=
  "gjklmnopqrvwxyzABDEGJKLMNOPQRVWXYZ1234567890",
 @guards="abde",
 @min_hash_length=0,
 @salt="",
 @seps="cfhistuCFHISTU">
[3] pry(main)> hasher.encode("http://google.com".hash)
=> "g58L2zvPMOppY"
[4] pry(main)> hasher.encode("http://google.com".hash)
=> "g58L2zvPMOppY"
[5] pry(main)> hasher.encode("http://google.com".hash)
=> "g58L2zvPMOppY"
[6] pry(main)> hasher.encode("cookies".hash)
=> "m38OQvKgYk3n"
[7] pry(main)> ^D
➜  shortr git:(links) ✗ clear

                                                         

















➜  shortr git:(links) ✗ rails c
Loading development environment (Rails 4.2.1)
irb(main):001:0> Link.make_shortr("google.com")
=> [9, 1, 5, 7, 1]
irb(main):002:0> Link.make_shortr("google.com")
=> [4, 3, 2, 8, 4]
irb(main):003:0> Link.make_shortr("google.com")
=> [9, 8, 7, 3, 4]
irb(main):004:0> Link.make_shortr("google.com")
=> [0, 9, 2, 3, 7]
irb(main):005:0> Link.make_shortr("google.com")
=> [1, 8, 3, 2, 0]
irb(main):006:0> Link.make_shortr("google.com")
=> [6, 5, 2, 8, 6]
irb(main):007:0> Link.make_shortr("google.com")
=> [1, 1, 3, 1, 3]
irb(main):008:0> Link.make_shortr("google.com")
=> [6, 8, 1, 2, 3]
irb(main):009:0> Link.make_shortr("google.com")
=> [4, 0, 4, 8, 0]
irb(main):010:0> ^D
➜  shortr git:(links) ✗ pry
[1] pry(main)> ('a' .. 'Z').to_a
=> []
[2] pry(main)> ('a' .. 'z').to_a + ('A' .. 'Z').to_a
=> ["a",
 "b",
 "c",
 "d",
 "e",
 "f",
 "g",
 "h",
 "i",
 "j",
 "k",
 "l",
 "m",
 "n",
 "o",
 "p",
 "q",
 "r",
 "s",
 "t",
 "u",
 "v",
 "w",
 "x",
 "y",
 "z",
 "A",
 "B",
 "C",
 "D",
 "E",
 "F",
 "G",
 "H",
 "I",
 "J",
 "K",
 "L",
 "M",
 "N",
 "O",
 "P",
 "Q",
 "R",
 "S",
 "T",
 "U",
 "V",
 "W",
 "X",
 "Y",
 "Z"]
[3] pry(main)> ^D
➜  shortr git:(links) ✗ rails c
Loading development environment (Rails 4.2.1)
irb(main):001:0> Link.make_shortr('google.com')
=> ["H", "Z", 3, 3, "Q"]
irb(main):002:0> Link.make_shortr('google.com').join
=> "jmom3"
irb(main):003:0> Link.make_shortr('google.com').join
=> "GX0Ux"
irb(main):004:0> Link.make_shortr('google.com').join
=> "aI1ka"
irb(main):005:0> Link.make_shortr('google.com').join
=> "5uMC8"
irb(main):006:0> Link.make_shortr('google.com').join
=> "XKOmj"
irb(main):007:0> Link.make_shortr('google.com').join
=> "F0O7g"
irb(main):008:0> Link.make_shortr('google.com').join
=> "g7J3C"
irb(main):009:0> Link.make_shortr('google.com').join
=> "KYHJV"
irb(main):010:0> Link.make_shortr('google.com').join
=> "w6BST"
irb(main):011:0> Link.make_shortr('google.com').join
^[[B=> "MjsQH"
irb(main):012:0> Link.make_shortr('google.com').join
=> "Uk44K"
irb(main):013:0> Link.make_shortr('google.com').join
=> "yG0EN"
irb(main):014:0> Link.make_shortr('google.com').join
=> "pZmBU"
irb(main):015:0> Link.make_shortr('google.com').join
=> "UUzrw"
irb(main):016:0> Link.make_shortr('google.com').join
=> "gLZTM"
irb(main):017:0> Link.make_shortr('google.com').join
=> "MCSY0"
irb(main):018:0> Link.make_shortr('google.com').join
=> "hhmGl"
irb(main):019:0> Link.make_shortr('google.com').join
=> "B3dk4"
irb(main):020:0> Link.make_shortr('google.com').join
=> "lHOVP"
irb(main):021:0> Link.make_shortr('google.com').join
=> "iCyoa"
irb(main):022:0> Link.make_shortr('google.com').join
=> "AbBiQ"
irb(main):023:0> Link.make_shortr('google.com').join
=> "lH5gl"
irb(main):024:0> Link.make_shortr('google.com').join
=> "ijcwu"
irb(main):025:0> Link.make_shortr('google.com').join
=> "AkVH8"
irb(main):026:0> Link.make_shortr('google.com').join
=> "OTtIY"
irb(main):027:0> ^D
➜  shortr git:(links) ✗ clear

                                                         

















➜  shortr git:(links) ✗ rails c
Loading development environment (Rails 4.2.1)
irb(main):001:0> Link.random_string
=> ["M", 5, 2, "l", 7]
irb(main):002:0> Link.random_string.join
=> "TmGX8"
irb(main):003:0> Link.random_string.join
=> "dAHnB"
irb(main):004:0> Link.random_string.join
=> "a68UM"
irb(main):005:0> Link.random_string.join
=> "Lp7jM"
irb(main):006:0> Link.random_string.join
=> "CMKBM"
irb(main):007:0> ^D
➜  shortr git:(links) ✗ bundle
Using rake 10.4.2
Using i18n 0.7.0
Using json 1.8.3
Using minitest 5.7.0
Using thread_safe 0.3.5
Using tzinfo 1.2.2
Using activesupport 4.2.1
Using builder 3.2.2
Using erubis 2.7.0
Using mini_portile 0.6.2
Using nokogiri 1.6.6.2
Using rails-deprecated_sanitizer 1.0.3
Using rails-dom-testing 1.0.6
Using loofah 2.0.2
Using rails-html-sanitizer 1.0.2
Using actionview 4.2.1
Using rack 1.6.1
Using rack-test 0.6.3
Using actionpack 4.2.1
Using globalid 0.3.5
Using activejob 4.2.1
Using mime-types 2.6.1
Using mail 2.6.3
Using actionmailer 4.2.1
Using activemodel 4.2.1
Using arel 6.0.0
Using activerecord 4.2.1
Using debug_inspector 0.0.2
Using binding_of_caller 0.7.2
Using columnize 0.9.0
Using byebug 5.0.0
Using coffee-script-source 1.9.1.1
Using execjs 2.5.2
Using coffee-script 2.4.1
Using thor 0.19.1
Using railties 4.2.1
Using coffee-rails 4.1.0
Using multi_json 1.11.1
Using jbuilder 2.2.16
Using jquery-rails 4.0.3
Using bundler 1.7.9
Using sprockets 3.2.0
Using sprockets-rails 2.3.1
Using rails 4.2.1
Using rdoc 4.2.0
Using sass 3.4.14
Using tilt 1.4.1
Using sass-rails 5.0.3
Using sdoc 0.4.1
Using spring 1.3.6
Using sqlite3 1.3.10
Using turbolinks 2.5.3
Using uglifier 2.7.1
Using web-console 2.1.2
Your bundle is complete!
Use `bundle show [gemname]` to see where a bundled gem is installed.
➜  shortr git:(links) ✗ git status
On branch links
Your branch is up-to-date with 'origin/links'.
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	modified:   app/models/link.rb

no changes added to commit (use "git add" and/or "git commit -a")
➜  shortr git:(links) ✗ 


















➜  shortr git:(links) ✗ git status
On branch links
Your branch is up-to-date with 'origin/links'.
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	modified:   app/models/link.rb

no changes added to commit (use "git add" and/or "git commit -a")
➜  shortr git:(links) ✗ git add app/models/link.rb 
➜  shortr git:(links) ✗ git commit -m 'Add ability to make shortened urls.'
[links 9cc4f2a] Add ability to make shortened urls.
 1 file changed, 15 insertions(+)
➜  shortr git:(links) 


















➜  shortr git:(links) git push
Counting objects: 5, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (5/5), done.
Writing objects: 100% (5/5), 640 bytes | 0 bytes/s, done.
Total 5 (delta 3), reused 0 (delta 0)
To git@github.com:redline6561/shortr.git
   70785a6..9cc4f2a  links -> links
➜  shortr git:(links) who
Vedika
➜  shortr git:(links) repo
redline6561
➜  shortr git:(links) 























➜  shortr git:(links) who
Vedika
➜  shortr git:(links) repo
redline6561
➜  shortr git:(links) rake routes
Prefix Verb URI Pattern        Controller#Action
       GET  /:shortr(.:format) links#show
➜  shortr git:(links) ✗ git status
On branch links
Your branch is up-to-date with 'origin/links'.
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	modified:   config/routes.rb

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	app/controllers/links_controller.rb

no changes added to commit (use "git add" and/or "git commit -a")
➜  shortr git:(links) ✗ git add config/routes.rb app/controllers/links_controller.rb 
➜  shortr git:(links) ✗ git commit -m "Get basic redirection working. Still can't add links."
[links 2651fc2] Get basic redirection working. Still can't add links.
 2 files changed, 8 insertions(+)
 create mode 100644 app/controllers/links_controller.rb
➜  shortr git:(links) git push
Counting objects: 7, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (7/7), done.
Writing objects: 100% (7/7), 767 bytes | 0 bytes/s, done.
Total 7 (delta 4), reused 0 (delta 0)
To git@github.com:redline6561/shortr.git
   9cc4f2a..2651fc2  links -> links
➜  shortr git:(links) 


















➜  shortr git:(links) git fetch brit
remote: Counting objects: 46, done.
remote: Compressing objects: 100% (30/30), done.
remote: Total 46 (delta 17), reused 41 (delta 12), pack-reused 0
Unpacking objects: 100% (46/46), done.
From https://github.com/TIY-ATL-ROR-2015-May/shortr
 * [new branch]      master     -> brit/master
 * [new branch]      user       -> brit/user
➜  shortr git:(links) git remote -v
brit	https://github.com/TIY-ATL-ROR-2015-May/shortr.git (fetch)
brit	https://github.com/TIY-ATL-ROR-2015-May/shortr.git (push)
origin	git@github.com:redline6561/shortr.git (fetch)
origin	git@github.com:redline6561/shortr.git (push)
➜  shortr git:(links) 



















➜  shortr git:(links) git fetch brit
➜  shortr git:(links) git merge brit/master
Auto-merging db/schema.rb
CONFLICT (add/add): Merge conflict in db/schema.rb
Auto-merging config/routes.rb
Automatic merge failed; fix conflicts and then commit the result.
➜  shortr git:(links) ✗ git status
On branch links
Your branch is up-to-date with 'origin/links'.
You have unmerged paths.
  (fix conflicts and run "git commit")

Changes to be committed:

	modified:   Gemfile
	modified:   Gemfile.lock
	new file:   app/controllers/sessions_controller.rb
	new file:   app/controllers/users_controller.rb
	new file:   app/models/user.rb
	new file:   app/views/sessions/login.html.erb
	new file:   app/views/users/_form.html.erb
	new file:   app/views/users/index.html.erb
	new file:   app/views/users/new.html.erb
	modified:   config/routes.rb
	new file:   db/migrate/20150611150939_create_users.rb
	new file:   test/fixtures/users.yml
	new file:   test/models/user_test.rb

Unmerged paths:
  (use "git add <file>..." to mark resolution)

	both added:      db/schema.rb

➜  shortr git:(links) ✗ git status
On branch links
Your branch is up-to-date with 'origin/links'.
You have unmerged paths.
  (fix conflicts and run "git commit")

Changes to be committed:

	modified:   Gemfile
	modified:   Gemfile.lock
	new file:   app/controllers/sessions_controller.rb
	new file:   app/controllers/users_controller.rb
	new file:   app/models/user.rb
	new file:   app/views/sessions/login.html.erb
	new file:   app/views/users/_form.html.erb
	new file:   app/views/users/index.html.erb
	new file:   app/views/users/new.html.erb
	modified:   config/routes.rb
	new file:   db/migrate/20150611150939_create_users.rb
	new file:   test/fixtures/users.yml
	new file:   test/models/user_test.rb

Unmerged paths:
  (use "git add <file>..." to mark resolution)

	both added:      db/schema.rb

➜  shortr git:(links) ✗ git add db/schema.rb 
➜  shortr git:(links) ✗ git commit -m 'Merge up with master.'
[links 6ab77ad] Merge up with master.
➜  shortr git:(links) git log
➜  shortr git:(links) git push
Counting objects: 59, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (55/55), done.
Writing objects: 100% (59/59), 5.93 KiB | 0 bytes/s, done.
Total 59 (delta 28), reused 0 (delta 0)
To git@github.com:redline6561/shortr.git
   2651fc2..6ab77ad  links -> links
➜  shortr git:(links) git log
➜  shortr git:(links) git status
On branch links
Your branch is up-to-date with 'origin/links'.
nothing to commit, working directory clean
➜  shortr git:(links) 
